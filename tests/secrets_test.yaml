# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
# Source: nautobot/templates/tests/secrets_test.yaml
release:
  name: nautobot
suite: secrets
templates:
- templates/secrets.yaml
values:
- ../values.yaml

tests:

- it: Should create a secret named 'secret.postgres' with correct metadata and equal data fields
  asserts:
  - equal:
      path: metadata.name
      value: secret.postgres
  - equal:
      path: metadata.namespace
      value: nautobot
  - equal:
      path: metadata.labels
      value:
        app.kubernetes.io/name: nautobot
        app.kubernetes.io/instance: nautobot
  - equal:
      path: type
      value: Opaque
  - equal:
      path: data.password
      value: cG9zdGdyZXM=
  - equal:
      path: data.username
      value: cG9zdGdyZXM=
  set:
    database:
      password: postgres
      username: postgres
  documentIndex: 0

- it: Should create a secret named 'secret.superuser' with correct metadata and equal data fields
  asserts:
  - equal:
      path: metadata.name
      value: secret.superuser
  - equal:
      path: metadata.namespace
      value: nautobot
  - equal:
      path: metadata.labels
      value:
        app.kubernetes.io/name: nautobot
        app.kubernetes.io/instance: nautobot
  - equal:
      path: type
      value: Opaque
  - equal:
      path: data.email
      value: dGVzdEBuYXV0b2JvdC5zdmMuY2x1c3Rlci5sb2NhbA==
  - equal:
      path: data.password
      value: cGFzc3dvcmQ=
  - equal:
      path: data.secretKey
      value: c2VjcmV0S2V5
  - equal:
      path: data.token
      value: dG9rZW4=
  - equal:
      path: data.username
      value: dXNlcm5hbWU=
  set:
    superUser:
      email: test@nautobot.svc.cluster.local
      password: password
      secretKey: secretKey
      token: token
      username: username
  documentIndex: 1

- it: Should create a secret named 'secret.github.ghcr' with correct metadata and equal .dockerconfigjson field
  asserts:
  - equal:
      path: metadata.name
      value: secret.github.ghcr
  - equal:
      path: metadata.namespace
      value: nautobot
  - equal:
      path: metadata.labels
      value:
        app.kubernetes.io/name: nautobot
        app.kubernetes.io/instance: nautobot
  - equal:
      path: type
      value: kubernetes.io/dockerconfigjson
  - equal:
      path: data[".dockerconfigjson"]
      value: dockerconfigjson
  set:
    image:
      secret:
        data: dockerconfigjson
  documentIndex: 2

- it: Should create a secret named 'secret.github.sso' with correct metadata and equal data fields
  asserts:
  - equal:
      path: metadata.name
      value: secret.github.sso
  - equal:
      path: metadata.namespace
      value: nautobot
  - equal:
      path: metadata.labels
      value:
        app.kubernetes.io/name: nautobot
        app.kubernetes.io/instance: nautobot
  - equal:
      path: type
      value: Opaque
  - equal:
      path: data.social_auth_github_key
      value: Z2gta2V5
  - equal:
      path: data.social_auth_github_secret
      value: Z2gtc2VjcmV0
  set:
    sso:
      social_auth_github_key: gh-key
      social_auth_github_secret: gh-secret
  documentIndex: 3

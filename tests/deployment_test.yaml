# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
# Source: nautobot/templates/tests/deployment_test.yaml
release:
  name: nautobot
suite: deployments
templates:
- templates/deployment.yaml
values:
- ../values.yaml

tests:

- it: Should create a Deployment named 'nautobot' with correct metadata and spec
  asserts:
  - equal:
      path: metadata.name
      value: nautobot
  - equal:
      path: metadata.labels
      value:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: nautobot
        app.kubernetes.io/name: nautobot
  - equal:
      path: spec.replicas
      value: 1
  - equal:
      path: spec.selector.matchLabels
      value:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: nautobot
        app.kubernetes.io/name: nautobot
  documentIndex: 0

- it: Should create a 'nautobot' Deployment with correct init container
  asserts:
  - equal:
      path: spec.template.spec.initContainers[0].name
      value: nautobot-init
  - equal:
      path: spec.template.spec.initContainers[0].image
      value: ghcr.io/edwardtheharris/helm-nautobot/nautobot:0.0.2
  - equal:
      path: spec.template.spec.initContainers[0].command[0]
      value: /bin/bash
  - equal:
      path: spec.template.spec.initContainers[0].command[1]
      value: '-c'
  - equal:
      path: spec.template.spec.initContainers[0].env[0].name
      value: NAUTOBOT_DEBUG
  - equal:
      path: spec.template.spec.initContainers[0].env[0].value
      value: 'True'
  documentIndex: 0

- it: Should create a 'nautobot' Deployment with correct container and environment variables
  asserts:
  - equal:
      path: spec.template.spec.containers[0].name
      value: nautobot
  - equal:
      path: spec.template.spec.containers[0].image
      value: ghcr.io/edwardtheharris/helm-nautobot/nautobot:0.0.2
  - equal:
      path: spec.template.spec.containers[0].command[0]
      value: /bin/bash
  - equal:
      path: spec.template.spec.containers[0].command[1]
      value: '-c'
  - equal:
      path: spec.template.spec.containers[0].args[0]
      value: 'apk add --no-cache sudo && sudo -E -u nautobot /opt/nautobot/bin/nautobot-server start --ini /opt/nautobot/uwsgi.ini'
  - equal:
      path: spec.template.spec.containers[0].env[0].name
      value: NAUTOBOT_ALLOWED_HOSTS
  - equal:
      path: spec.template.spec.containers[0].env[0].value
      value: "*"
  - equal:
      path: spec.template.spec.containers[0].env[10].name
      value: NAUTOBOT_DB_NAME
  documentIndex: 0

- it: Should create a Deployment named 'celery-worker' with correct metadata and spec
  asserts:
  - equal:
      path: metadata.name
      value: celery-worker
  - equal:
      path: metadata.labels
      value:
        app.kubernetes.io/component: scheduler
        app.kubernetes.io/instance: nautobot
        app.kubernetes.io/name: celery-worker
        app.kubernetes.io/part-of: nautobot
  - equal:
      path: spec.replicas
      value: 1
  - equal:
      path: spec.selector.matchLabels
      value:
        app.kubernetes.io/component: scheduler
        app.kubernetes.io/instance: nautobot
        app.kubernetes.io/name: celery-worker
        app.kubernetes.io/part-of: nautobot
  documentIndex: 1

- it: Should create a 'celery-worker' Deployment with correct init container
  asserts:
  - equal:
      path: spec.template.spec.initContainers[0].name
      value: celery-worker-init
  - equal:
      path: spec.template.spec.initContainers[0].image
      value: ghcr.io/edwardtheharris/helm-nautobot/celery:0.0.2
  - equal:
      path: spec.template.spec.initContainers[0].command[0]
      value: /bin/bash
  - equal:
      path: spec.template.spec.initContainers[0].command[1]
      value: '-c'
  - equal:
      path: spec.template.spec.initContainers[0].env[0].name
      value: NAUTOBOT_ALLOWED_HOSTS
  - equal:
      path: spec.template.spec.initContainers[0].env[0].value
      value: "*"
  documentIndex: 1

- it: Should create a 'celery-worker' Deployment with correct container and environment variables
  asserts:
  - equal:
      path: spec.template.spec.containers[0].name
      value: celery-worker
  - equal:
      path: spec.template.spec.containers[0].image
      value: ghcr.io/edwardtheharris/helm-nautobot/celery:0.0.2
  - equal:
      path: spec.template.spec.containers[0].command[0]
      value: /bin/bash
  - equal:
      path: spec.template.spec.containers[0].command[1]
      value: '-c'
  - equal:
      path: spec.template.spec.containers[0].args[0]
      value: 'apk add --no-cache sudo && sudo -E -u celery /opt/celery/bin/nautobot-server celery worker --loglevel DEBUG --queues celery-default,default,default-celery,jobs,tasks'
  - equal:
      path: spec.template.spec.containers[0].env[10].name
      value: NAUTOBOT_DB_NAME
  documentIndex: 1

- it: Should create a Deployment named 'celery-beat' with correct metadata and spec
  asserts:
  - equal:
      path: metadata.name
      value: celery-beat
  - equal:
      path: metadata.labels
      value:
        app.kubernetes.io/component: scheduler
        app.kubernetes.io/instance: nautobot
        app.kubernetes.io/name: celery-beat
        app.kubernetes.io/part-of: nautobot
  - equal:
      path: spec.replicas
      value: 1
  - equal:
      path: spec.selector.matchLabels
      value:
        app.kubernetes.io/component: scheduler
        app.kubernetes.io/instance: nautobot
        app.kubernetes.io/name: celery-beat
        app.kubernetes.io/part-of: nautobot
  documentIndex: 2

- it: Should create a 'celery-beat' Deployment with correct init container
  asserts:
  - equal:
      path: spec.template.spec.initContainers[0].name
      value: celery-beat-init
  - equal:
      path: spec.template.spec.initContainers[0].image
      value: ghcr.io/edwardtheharris/helm-nautobot/celery:0.0.2
  - equal:
      path: spec.template.spec.initContainers[0].command[0]
      value: /bin/bash
  - equal:
      path: spec.template.spec.initContainers[0].command[1]
      value: '-c'
  - equal:
      path: spec.template.spec.initContainers[0].env[0].name
      value: NAUTOBOT_CELERY_TASK_DEFAULT_QUEUE
  - equal:
      path: spec.template.spec.initContainers[0].env[0].value
      value: 'default'
  documentIndex: 2

- it: Should create a 'celery-beat' Deployment with correct container and environment variables
  asserts:
  - equal:
      path: spec.template.spec.containers[0].name
      value: celery-beat
  - equal:
      path: spec.template.spec.containers[0].image
      value: ghcr.io/edwardtheharris/helm-nautobot/celery:0.0.2
  - equal:
      path: spec.template.spec.containers[0].command[0]
      value: /bin/bash
  - equal:
      path: spec.template.spec.containers[0].command[1]
      value: '-c'
  - equal:
      path: spec.template.spec.containers[0].args[0]
      value: 'apk add --no-cache sudo && sudo -E -u celery /opt/celery/bin/nautobot-server celery beat --loglevel DEBUG'
  - equal:
      path: spec.template.spec.containers[0].env[10].name
      value: NAUTOBOT_DB_NAME
  documentIndex: 2

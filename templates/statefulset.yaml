{{- if eq .Values.type "StatefulSet" -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    ss.kubernetes.io/name: {{ .Values.nameOverride }}
    ss.kubernetes.io/instance: {{ .Release.Name }}
  labels:
    ss.kubernets.io/name: {{ .Values.nameOverride }}
    ss.kubernetes.io/instance: {{ .Release.Name }}
  name: {{ .Values.fullnameOverride }}
spec:
  selector:
    matchLabels:
      ss.kubernetes.io/name: {{ include "nautobot.name" . }}
      ss.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ .Values.nameOverride }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        ss.kubernetes.io/name: {{ include "nautobot.name" . }}
        ss.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: nautobot
          # command: ["nautobot-server", "--config", "/opt/nautobot/.nautobot/nautobot_config.py"]
          command:
            - sleep
            - "3600"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8000
              name: nautobot
          env:
            - name: NAUTOBOT_ALLOWED_HOSTS
              value: {{ .Values.config.allowed_hosts | quote }}
            - name: NAUTOBOT_CACHES_BACKEND
              value: {{ .Values.config.caches_backend }}
            - name: NAUTOBOT_CREATE_SUPERUSER
              value: {{ .Values.superUser.create | quote }}
            - name: NAUTOBOT_DB_ENGINE
              value: {{ .Values.database.engine }}
            - name: NAUTOBOT_DB_HOST
              value: {{ .Values.database.host }}
            - name: NAUTOBOT_DB_NAME
              value: {{ .Values.database.database }}
            - name: NAUTOBOT_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret.{{ .Values.database.name }}
                  key: password
            - name: NAUTOBOT_DB_PORT
              value: {{ .Values.database.port | quote }}
            - name: NAUTOBOT_DB_TIMEOUT
              value: {{ .Values.database.timeout | quote }}
            - name: NAUTOBOT_DB_USER
              valueFrom:
                secretKeyRef:
                  name: secret.{{ .Values.database.name }}
                  key: username
            - name: NAUTOBOT_REDIS_HOST
              value: redis-0.redis.svc.cluster.local
            - name: NAUTOBOT_REDIS_SCHEME
              value: redis
            - name: NAUTOBOT_SECRET_KEY
              value: {{ .Values.superUser.secretKey }}
            - name: NAUTOBOT_SUPERUSER_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.superUser.secret.name }}
                  key: token
            - name: NAUTOBOT_SUPERUSER_EMAIL
              value: {{ .Values.superUser.email }}
            - name: NAUTOBOT_SUPERUSER_NAME
              value: {{ .Values.superUser.name }}
            - name: NAUTOBOT_SUPERUSER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.superUser.secret.name }}
                  key: password
            - name: SOCIAL_AUTH_GITHUB_KEY
              value: {{ .Values.nautobot.social_auth_github_key }}
            - name: SOCIAL_AUTH_GITUB_SECRET
              value: {{ .Values.nautobot.social_auth_github_secret }}
          volumeMounts:
            - name: nautobot-config
              mountPath: /opt/nautobot/.nautobot
            - name: {{ .Values.persistence.name }}
              mountPath: /opt/nautobot/
      imagePullSecrets:
        - name: ghcr
      securityContext:
        fsGroup: 999
      volumes:
        - name: {{ .Values.config.name }}
          configMap:
            name: nautobot-config
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.persistence.name }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        storageClassName: {{ .Values.persistence.storageClass }}
        volumeMode: Filesystem
{{ end }}
